{
  "openapi": "3.0.1",
  "info": {
    "title": "Auth API",
    "version": "v1"
  },
  "paths": {
    "/auth/v1/facebook": {
      "get": {
        "tags": [
          "Facebook"
        ],
        "parameters": [
          {
            "name": "forward",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/v1/facebook/callback": {
      "get": {
        "tags": [
          "Facebook"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "forward",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/google": {
      "get": {
        "tags": [
          "Google"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/v1/google/callback": {
      "get": {
        "tags": [
          "Google"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/health-check": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/v1/session/{login}": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Initializes login sequence",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "User name to be logged in",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User name to be logged in",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the newly created token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          },
          "400": {
            "description": "Internal error during acquiring token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/session": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Finalizes login sequence and returns User object and its session tokens",
        "requestBody": {
          "description": "Login model. Fields token, password",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Session"
        ],
        "summary": "Issues the new access/refresh tokens pair by provided refresh token.",
        "requestBody": {
          "description": "exist refresh token",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tokens was successfully updated. A new access tokens with updated claims got",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResultOperationResult"
                }
              }
            }
          },
          "400": {
            "description": "Model error. See error code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResultOperationResult"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect token or token out of date. Session terminated. New session required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Finalizes current user session",
        "responses": {
          "200": {
            "description": "Session successfully terminated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          },
          "400": {
            "description": "Unrecognized error. You should terminate all user sessions' data and redirect him to home.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/Users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns current user profile",
        "responses": {
          "200": {
            "description": "Profile of the logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelSecuredDtoOperationResult"
                }
              }
            }
          },
          "401": {
            "description": "Could not establish user identity. The session token might be invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Updates current user profile",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile of the logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelSecuredDtoOperationResult"
                }
              }
            }
          },
          "401": {
            "description": "Could not establish user identity. The session token might be invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/Users/registration": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates new user account",
        "requestBody": {
          "description": "Account model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          },
          "400": {
            "description": "If the item is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          },
          "201": {
            "description": "Returns the newly created item"
          }
        }
      }
    },
    "/auth/v1/Users/recovery": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Updates user password",
        "requestBody": {
          "description": "User model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdatePasswordDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdatePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdatePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Model accepted and updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          },
          "400": {
            "description": "See error code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/Users/recovery/{login}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Initializes password recovery sequence and sends the password recovery code to the user's e-mail.",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "User login to initialize recovery sequence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User login to initialize recovery sequence",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The recovery token was issued and an e-mail was successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          },
          "400": {
            "description": "Internal error during recovery procedure, model in invalid or user does not exist (see error code for details)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/vk": {
      "get": {
        "tags": [
          "Vk"
        ],
        "parameters": [
          {
            "name": "forward",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/v1/vk/callback": {
      "get": {
        "tags": [
          "Vk"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "forward",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OkResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ErrorData": {
        "type": "object",
        "properties": {
          "errorText": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ObjectOperationResult": {
        "type": "object",
        "properties": {
          "errorData": {
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginModelDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponseOperationResult": {
        "type": "object",
        "properties": {
          "errorData": {
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenResult": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenResultOperationResult": {
        "type": "object",
        "properties": {
          "errorData": {
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/RefreshTokenResult"
          }
        },
        "additionalProperties": false
      },
      "UnauthorizedResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperationResult": {
        "type": "object",
        "properties": {
          "errorData": {
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserPermissionsDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AccountType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserAccountModelDto": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isLocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserModelSecuredDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsDto"
          },
          "linkedAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAccountModelDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelSecuredDtoOperationResult": {
        "type": "object",
        "properties": {
          "errorData": {
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserModelSecuredDto"
          }
        },
        "additionalProperties": false
      },
      "UserModelDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsDto"
          },
          "linkedAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAccountModelDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelUpdatePasswordDto": {
        "type": "object",
        "properties": {
          "recoveryToken": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}